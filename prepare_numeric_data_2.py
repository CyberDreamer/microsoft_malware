import pandas as pd
import numpy as np
#from sklearn.metrics import roc_auc_score
import gc
gc.enable()
from dtypes import dtypes
import time
from sklearn.preprocessing import LabelEncoder

num_columns = [key for key, value in dtypes.items() if value is not 'category']
num_types = {key: value for key, value in dtypes.items() if value is not 'category'}

print('Load category features')
train = pd.read_csv('train.csv', dtype=num_types, usecols=num_columns, low_memory=True, nrows=None)
num_columns.remove('HasDetections')
test  = pd.read_csv('test.csv',  dtype=num_types, usecols=num_columns, low_memory=True, nrows=None)
num_columns += ['HasDetections']

print('Transform category features')
col = 1
total_cols = len(num_columns)


# for usecol in num_columns:
#     print('column {}/{}'.format(col, total_cols))
#     col+=1

#     train[usecol] = train[usecol].fillna(value=0.0)
#     if usecol in test:
#         test[usecol] = test[usecol].fillna(value=0.0)

train_y = np.array(train['HasDetections'], dtype=np.float32)  
np.save('train_num_np_y', train_y)  

num_columns.remove('HasDetections')

train = np.array(train[num_columns], dtype=np.float32)  
np.save('train_num_np_x', train) 

test = np.array(test[num_columns], dtype=np.float32)  
np.save('test_num_np_x', test)  
